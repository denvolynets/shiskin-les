/*
  // Example gradient
  .body{
    @include background-gradient(#fff14d, #82f8c3, vertical);
  }
*/

@mixin background-gradient($firstColor, $lastColor, $orientation) {
  $dir: (
    one: 'left,',
    two: 'to right,'
  );

  $type: 'linear';

  @if ($orientation == 'vertical') {
    $dir: (
      one: 'top,',
      two: 'to bottom,'
    );
  } @else if ($orientation == 'radial') {
    $dir: (
      one: 'center, ellipse cover,',
      two: 'ellipse at center,'
    );
    $type: 'radial';
  } @else if ($orientation == 'diagonal-bottom') {
    $dir: (
      one: '-45deg,',
      two: '135deg,'
    );
  } @else if ($orientation == 'diagonal-top') {
    $dir: (
      one: '45deg,',
      two: '45deg,'
    );
  }

  background: $firstColor;
  background: -moz-#{$type}-gradient(#{map-get($dir, 'one')} $firstColor 0%, $lastColor 100%);
  background: -webkit-#{$type}-gradient(#{map-get($dir, 'one')} $firstColor 0%, $lastColor 100%);
  background: #{$type}-gradient(#{map-get($dir, 'two')} $firstColor 0%, $lastColor 100%);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#{firstColor}', endColorstr='#{$lastColor}}', GradientType=1);
}

// Padding and margin util
.u{
	@each $prefix, $type in (pd: padding, mr: margin) {
		&-#{$prefix}{
			@each $dir in top, right, bottom, left {
				@each $val in 0, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50 {
					&-#{$val} {
						#{$type}: #{$val}px;
					}
					&-#{$dir} {
						&-#{$val} {
							#{$type}-#{$dir}: #{$val}px;
						}
					}
				}
			}
		}
	}
}


@mixin font-face($font-name,$font-file,$font-style,$font-weight){
  @font-face {
      font-family: '#{$font-name}';
      src: url('/static/fonts/#{$font-file}.eot'); /* IE9 Compat Modes */
      src: url('/static/fonts/#{$font-file}.eot?#iefix') format('embedded-opentype'), /* IE6-IE8 */
      url('/static/fonts/#{$font-file}.woff') format('woff'), /* Modern Browsers */
      url('/static/fonts/#{$font-file}.ttf') format('truetype'), /* Safari, Android, iOS */
      url('/static/fonts/#{$font-file}.svg##{$font-file}') format('svg'); /* Legacy iOS */
      font-style: #{$font-style};
      font-weight: #{$font-weight};
      text-rendering: optimizeLegibility;
  }
}

@mixin arrow($color, $width, $padding, $dir) {
  $rotate: 0deg;
  
  @if ($dir == 'up') {
    $rotate: -135deg;
  }
  @else if ($dir == 'down') {
    $rotate: 45deg;
  }
  @else if ($dir == 'left') {
    $rotate: 135deg;
  }
  @else if ($dir == 'right') {
    $rotate: -45deg;
  }
  border: solid #{$color};
  border-width: 0 #{$width} #{$width} 0;
  display: inline-block;
  padding: #{$padding};
  transform: rotate($rotate);
}


@mixin hexagon($color, $width) {
    width: #{$width};
    height: calc(#{$width} - (#{$width} / 2.4));
    background: #{$color};;
    position: relative;

  &:before {
    content: "";
    position: absolute;
    top: calc(-#{$width} / 4); 
    left: 0;
    width: 0;
    height: 0;
    border-left: calc(#{$width} / 2) solid transparent;
    border-right: calc(#{$width} / 2) solid transparent;
    border-bottom: calc(#{$width} / 4) solid #{$color};
  }
  &:after {
    content: "";
    position: absolute;
    bottom: calc(-#{$width} / 4); 
    left: 0;
    width: 0;
    height: 0;
    border-left: calc(#{$width} / 2) solid transparent;
    border-right: calc(#{$width} / 2) solid transparent;
    border-top: calc(#{$width} / 4) solid #{$color};
  }
}
